import pandas as pd

# Path of the file to read
iowa_file_path = '../input/home-data-for-ml-course/train.csv'

df = pd.read_csv(iowa_file_path)

# Set up code checking
from learntools.core import binder
binder.bind(globals())
from learntools.machine_learning.ex3 import *

Step 1: Specify Prediction Target
Select the target variable, which corresponds to the sales price. Save this to a new variable called y. You'll need to print a list of the columns to find the name of the column you need.
# print the list of columns in the dataset to find the name of the prediction target
df.columns

Y = df['SalePrice']

# Check your answer
step_1.check()

Step 2: Create X
Now you will create a DataFrame called X holding the predictive features.

Since you want only some columns from the original data, you'll first create a list with the names of the columns you want in X.

You'll use just the following columns in the list (you can copy and paste the whole list to save some typing, though you'll still need to add quotes):

* LotArea
* YearBuilt
* 1stFlrSF
* 2ndFlrSF
* FullBath
* BedroomAbvGr
* TotRmsAbvGrd

After you've created that list of features, use it to create the DataFrame that you'll use to fit the model.

# Create the list of features below
feature_names = ['LotArea', 'YearBuilt', '1stFlrSF', '2ndFlrSF', 'FullBath', 'BedroomAbvGr', 'TotRmsAbvGrd']

# Select data corresponding to features in feature_names
X = df[feature_names]

# Check your answer
step_2.check()

# step_2.hint()
# step_2.solution()

Review Data
Before building a model, take a quick look at X to verify it looks sensible

# Review data
# print description or statistics from X
print(X)
print("----------------------------------")
print(Y)
# print the top few lines
#print(_)

Step 3: Specify and Fit Model
Create a DecisionTreeRegressor and save it iowa_model. Ensure you've done the relevant import from sklearn to run this command.

Then fit the model you just created using the data in X and y that you saved above.

from sklearn import svm, datasets, tree
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
from sklearn.neighbors import KNeighborsClassifier
from sklearn.ensemble import RandomForestClassifier
from sklearn.tree import DecisionTreeClassifier
from sklearn.neural_network import MLPClassifier

#specify the model. 
#For model reproducibility, set a numeric value for random_state when specifying the model
iowa_model = DecisionTreeRegressor(random_state=0, max_depth=5)

# Fit the model
iowa_model.fit(X,Y)

# Check your answer
step_3.check()

Step 4: Make Predictions
Make predictions with the model's predict command using X as the data. Save the results to a variable called predictions.

predictions = iowa_model.predict(X)
print(predictions)

# Check your answer
step_4.check()

Think About Your Results
Use the head method to compare the top few predictions to the actual home values (in y) for those same homes. Anything surprising?

# You can write code in this cell
#print("Decision Tree",accuracy_score(Y,predictions)*100,"%")
